name: Build python-index

on:
  # allow triggering manually
  workflow_dispatch:

  # allow programmatic triggers
  repository_dispatch:

  # run every night at 12am, UTC+8
  # schedule:
  #   - cron: "0 16 * * *"

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-24.04-arm

    outputs:
      should_update: ${{ steps.update.outputs.should_update }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
            version: "latest"
            enable-cache: true

      - name: Setup GitHub Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Build site
        run: |
          uv sync
          uv run ghpypi --output=docs --repositories=repositories.txt --token=${{ secrets.ACTION_SECRET }} --title="mddanish00 PyPI" --merge-duplicates

      - name: Check for changes and push pages updates
        id: update
        run: |
          git add ./docs

          # Check if there are staged changes in the docs directory
          # git diff --staged --quiet exits with 0 if no changes, 1 if changes
          if ! git diff --staged --quiet ./docs; then
            echo "Changes detected in docs/. Committing and pushing..."
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git config --global user.name "github-actions[bot]"
            git commit -m "chore: automatic index update [skip ci]"
            git push origin main
            echo "Setting should_update=true"
            echo "should_update=true" >> "$GITHUB_OUTPUT"
          else
            echo "No staged changes in docs/."
            echo "Setting should_update=false"
            echo "should_update=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Upload site
        uses: actions/upload-pages-artifact@v3
        # Compare against the string 'true'
        if: steps.update.outputs.should_update == 'true'
        with:
          path: ./docs

  deploy:
    runs-on: ubuntu-24.04-arm

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    needs: [build]
    # Compare against the string 'true' using the needs context
    if: needs.build.outputs.should_update == 'true'

    steps:
      - name: Deploy to GitHub Pages
        id: deployment    
        uses: actions/deploy-pages@v4
